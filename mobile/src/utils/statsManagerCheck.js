// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã statsManager –±–µ–∑ AsyncStorage

import { 
  loadStats, 
  saveStats, 
  updateStatsAfterTest, 
  getSymbolStats, 
  updateSymbolStats,
  clearAllStats,
  isFallbackMode 
} from './statsManagerSwitch';

// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
export const checkStatsManager = async () => {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ statsManager...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º
    const mode = isFallbackMode();
    console.log(`üì± –†–µ–∂–∏–º: ${mode ? 'Fallback (–ü–∞–º—è—Ç—å)' : 'AsyncStorage'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const stats = await loadStats();
    console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', stats);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const testStats = {
      totalTests: 1,
      totalCorrect: 5,
      totalIncorrect: 2,
      totalTime: 120,
      currentStreak: 1,
      bestStreak: 1,
      lastTestDate: new Date().toISOString(),
      quizStats: {}
    };
    
    await saveStats(testStats);
    console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    const testResults = {
      correct: 3,
      incorrect: 1,
      timeElapsed: 60,
      quizType: 'hiragana',
      accuracy: 75
    };
    
    const updatedStats = await updateStatsAfterTest(testResults);
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', updatedStats);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–∏–º–≤–æ–ª–∞–º
    await updateSymbolStats('„ÅÇ', true);
    const symbolStats = await getSymbolStats();
    console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–∏–º–≤–æ–ª–∞–º:', symbolStats);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–∏—Å—Ç–∫—É
    await clearAllStats();
    const clearedStats = await loadStats();
    console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', clearedStats);
    
    console.log('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ statsManager:', error);
    return false;
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
export default checkStatsManager;



